name: Lint and Deploy to EC2

on:
  push:
    branches:
      - production
  pull_request:
    branches:
      - production

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      COMPOSER_ALLOW_SUPERUSER: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, curl, mysql
          coverage: none

      - name: Install and run all linters
        run: |
          cd backend
          composer install --no-interaction --prefer-dist
          ./vendor/bin/phpcs app config database routes tests
          ./vendor/bin/phpstan analyse app
          ./vendor/bin/phpmd app ansi rulesets.xml
  deploy:
    if: github.ref == 'refs/heads/production'
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy repo to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            COMMIT_HASH=${{ github.sha }}
            BACKUP_DIR=~/release-backups/$COMMIT_HASH
            mkdir -p ~/release-backups
            if [ -d ~/app ]; then
              mv ~/app "$BACKUP_DIR"
              rm -rf ~/app/*
            fi
            mkdir -p ~/app
      - name: Copy backend, frontend, and docker compose files to EC2 ~/app
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: backend frontend docker-compose.yml docker-compose.override.yml
          target: ~/app
          strip_components: 1

      - name: Run post-deploy SSH command
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/app
            docker compose down -v --remove-orphans
            docker compose build --no-cache --build-arg UID=$(id -u)
            docker compose -f docker-compose.yml -f docker-compose.override.yml up -d
            docker compose exec backend /bin/bash -c 'composer install && php artisan migrate:fresh && php artisan db:seed --class=Database\\Seeders\\DemoSeeder'
            echo "Deployment completed successfully."
